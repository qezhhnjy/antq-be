spring:
  application:
    name: antq-oauth

  profiles:
    active: dev

  cloud:
    nacos:
      discovery:
#        server-addr: 120.26.168.94:80
        server-addr: localhost:8848
        group: antq
      config:
        #        server-addr: 120.26.168.94:80
        server-addr: localhost:8848
        group: antq
        file-extension: yaml
      username: qezhhnjy
      password: Fu214849135sl

  servlet:
    multipart:
      enabled: true #是否启用http上传处理
      max-request-size: 150MB #最大请求文件的大小
      max-file-size: 50MB #设置单个文件最大长度
      file-size-threshold: 20MB #当文件达到多少时进行磁盘写入

  task:
    execution:
      pool:
        # 是否允许回收空闲的线程池，默认为true
        allow-core-thread-timeout: true
        # 核心线程数，默认为8
        core-size: 8
        # 队列容量，默认为无限大
        queue-capacity: 1024
        # 最大线程数，默认为无限大
        max-size: 10
        # 空闲的线程可以保留多少秒，默认为60
        keep-alive: 60s
      thread-name-prefix: ${spring.application.name}-async-
    scheduling:
      pool:
        size: 4
      thread-name-prefix: ${spring.application.name}-scheduler-

server:
  port: 11001
  undertow:
    # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
    # 不要设置过大，如果过大，启动项目会报错：打开文件数过多
    # CPU有几核，就填写几。
    # 阻塞任务线程池, 当执行类似servlet请求阻塞IO操作, undertow会从这个线程池中取得线程
    # 它的值设置取决于系统线程执行任务的阻塞系数，默认值是IO线程数*8
    # 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
    # 每块buffer的空间大小,越小的空间被利用越充分，不要设置太大，以免影响其他应用，合适即可
    buffer-size: 1024
    # 是否分配的直接内存(NIO直接分配的堆外内存)
    direct-buffers: true
    threads:
      io: 16
      worker: 128

mybatis-plus:
  mapper-locations: classpath:mapper/**/*.xml
  type-aliases-package: com.qezhhnjy.antq.entity
  global-config:
    db-config:
      id-type: assign_id
    banner: false
  configuration:
    #开启驼峰自动转换
    map-underscore-to-camel-case: true

pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: false
  params: count=countSql